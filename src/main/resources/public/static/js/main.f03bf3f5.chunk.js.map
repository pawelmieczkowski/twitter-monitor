{"version":3,"sources":["utils/LangLibrary.js","components/Chart.js","components/Header.js","pages/NetworkError.js","pages/ChartPage.js","App.js","reportWebVitals.js","index.js"],"names":["findFullLangName","lang","isoLangs","name","Chart","langData","totalOccurrence","dataSet","setDataSet","useState","showLangQty","setshowLangQty","selected","setSelected","selectedData","setSelectedData","useEffect","initiallySelected","i","push","newData","length","tempArr","timestamp","Date","parse","j","records","includes","occurrence","obj","reduce","item","reverse","findColor","str","hash","charCodeAt","colour","toString","substr","handleChange","event","target","filter","className","type","id","onChange","allSelected","checked","htmlFor","map","index","value","defaultChecked","replace","onClick","Number","MAX_SAFE_INTEGER","document","getElementById","ResponsiveContainer","width","height","LineChart","data","dx","dy","stdDeviation","result","in","XAxis","stroke","dataKey","tickCount","domain","tickMargin","tickFormatter","time","moment","local","format","YAxis","Tooltip","labelFormatter","formatter","Line","dot","Header","NetworkError","ChartPage","setLangData","setTotalOccurrence","code","setCode","fetchRecords","a","fetch","process","response","json","catch","error","Map","record","currentValue","get","set","delete","arr","Array","from","sort","b","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f03bf3f5.chunk.js","sourcesContent":["/**\r\n * @author Phil Teare\r\n * using wikipedia data\r\n */\r\nexport const findFullLangName = (lang) => {\r\n    if (lang !== null) {\r\n        return isoLangs[lang].name;\r\n    }\r\n}\r\n\r\nconst isoLangs = {\r\n    \"ab\": {\r\n        \"name\": \"Abkhaz\",\r\n        \"nativeName\": \"аҧсуа\"\r\n    },\r\n    \"aa\": {\r\n        \"name\": \"Afar\",\r\n        \"nativeName\": \"Afaraf\"\r\n    },\r\n    \"af\": {\r\n        \"name\": \"Afrikaans\",\r\n        \"nativeName\": \"Afrikaans\"\r\n    },\r\n    \"ak\": {\r\n        \"name\": \"Akan\",\r\n        \"nativeName\": \"Akan\"\r\n    },\r\n    \"sq\": {\r\n        \"name\": \"Albanian\",\r\n        \"nativeName\": \"Shqip\"\r\n    },\r\n    \"am\": {\r\n        \"name\": \"Amharic\",\r\n        \"nativeName\": \"አማርኛ\"\r\n    },\r\n    \"ar\": {\r\n        \"name\": \"Arabic\",\r\n        \"nativeName\": \"العربية\"\r\n    },\r\n    \"an\": {\r\n        \"name\": \"Aragonese\",\r\n        \"nativeName\": \"Aragonés\"\r\n    },\r\n    \"hy\": {\r\n        \"name\": \"Armenian\",\r\n        \"nativeName\": \"Հայերեն\"\r\n    },\r\n    \"as\": {\r\n        \"name\": \"Assamese\",\r\n        \"nativeName\": \"অসমীয়া\"\r\n    },\r\n    \"av\": {\r\n        \"name\": \"Avaric\",\r\n        \"nativeName\": \"авар мацӀ, магӀарул мацӀ\"\r\n    },\r\n    \"ae\": {\r\n        \"name\": \"Avestan\",\r\n        \"nativeName\": \"avesta\"\r\n    },\r\n    \"ay\": {\r\n        \"name\": \"Aymara\",\r\n        \"nativeName\": \"aymar aru\"\r\n    },\r\n    \"az\": {\r\n        \"name\": \"Azerbaijani\",\r\n        \"nativeName\": \"azərbaycan dili\"\r\n    },\r\n    \"bm\": {\r\n        \"name\": \"Bambara\",\r\n        \"nativeName\": \"bamanankan\"\r\n    },\r\n    \"ba\": {\r\n        \"name\": \"Bashkir\",\r\n        \"nativeName\": \"башҡорт теле\"\r\n    },\r\n    \"eu\": {\r\n        \"name\": \"Basque\",\r\n        \"nativeName\": \"euskara, euskera\"\r\n    },\r\n    \"be\": {\r\n        \"name\": \"Belarusian\",\r\n        \"nativeName\": \"Беларуская\"\r\n    },\r\n    \"bn\": {\r\n        \"name\": \"Bengali\",\r\n        \"nativeName\": \"বাংলা\"\r\n    },\r\n    \"bh\": {\r\n        \"name\": \"Bihari\",\r\n        \"nativeName\": \"भोजपुरी\"\r\n    },\r\n    \"bi\": {\r\n        \"name\": \"Bislama\",\r\n        \"nativeName\": \"Bislama\"\r\n    },\r\n    \"bs\": {\r\n        \"name\": \"Bosnian\",\r\n        \"nativeName\": \"bosanski jezik\"\r\n    },\r\n    \"br\": {\r\n        \"name\": \"Breton\",\r\n        \"nativeName\": \"brezhoneg\"\r\n    },\r\n    \"bg\": {\r\n        \"name\": \"Bulgarian\",\r\n        \"nativeName\": \"български език\"\r\n    },\r\n    \"my\": {\r\n        \"name\": \"Burmese\",\r\n        \"nativeName\": \"ဗမာစာ\"\r\n    },\r\n    \"ca\": {\r\n        \"name\": \"Catalan\",\r\n        \"nativeName\": \"Català\"\r\n    },\r\n    \"ch\": {\r\n        \"name\": \"Chamorro\",\r\n        \"nativeName\": \"Chamoru\"\r\n    },\r\n    \"ce\": {\r\n        \"name\": \"Chechen\",\r\n        \"nativeName\": \"нохчийн мотт\"\r\n    },\r\n    \"ny\": {\r\n        \"name\": \"Chichewa; Chewa; Nyanja\",\r\n        \"nativeName\": \"chiCheŵa, chinyanja\"\r\n    },\r\n    \"zh\": {\r\n        \"name\": \"Chinese\",\r\n        \"nativeName\": \"中文 (Zhōngwén), 汉语, 漢語\"\r\n    },\r\n    \"cv\": {\r\n        \"name\": \"Chuvash\",\r\n        \"nativeName\": \"чӑваш чӗлхи\"\r\n    },\r\n    \"kw\": {\r\n        \"name\": \"Cornish\",\r\n        \"nativeName\": \"Kernewek\"\r\n    },\r\n    \"co\": {\r\n        \"name\": \"Corsican\",\r\n        \"nativeName\": \"corsu, lingua corsa\"\r\n    },\r\n    \"cr\": {\r\n        \"name\": \"Cree\",\r\n        \"nativeName\": \"ᓀᐦᐃᔭᐍᐏᐣ\"\r\n    },\r\n    \"hr\": {\r\n        \"name\": \"Croatian\",\r\n        \"nativeName\": \"hrvatski\"\r\n    },\r\n    \"cs\": {\r\n        \"name\": \"Czech\",\r\n        \"nativeName\": \"česky, čeština\"\r\n    },\r\n    \"da\": {\r\n        \"name\": \"Danish\",\r\n        \"nativeName\": \"dansk\"\r\n    },\r\n    \"dv\": {\r\n        \"name\": \"Divehi\",\r\n        \"nativeName\": \"ދިވެހި\"\r\n    },\r\n    \"nl\": {\r\n        \"name\": \"Dutch\",\r\n        \"nativeName\": \"Nederlands, Vlaams\"\r\n    },\r\n    \"en\": {\r\n        \"name\": \"English\",\r\n        \"nativeName\": \"English\"\r\n    },\r\n    \"eo\": {\r\n        \"name\": \"Esperanto\",\r\n        \"nativeName\": \"Esperanto\"\r\n    },\r\n    \"et\": {\r\n        \"name\": \"Estonian\",\r\n        \"nativeName\": \"eesti, eesti keel\"\r\n    },\r\n    \"ee\": {\r\n        \"name\": \"Ewe\",\r\n        \"nativeName\": \"Eʋegbe\"\r\n    },\r\n    \"fo\": {\r\n        \"name\": \"Faroese\",\r\n        \"nativeName\": \"føroyskt\"\r\n    },\r\n    \"fj\": {\r\n        \"name\": \"Fijian\",\r\n        \"nativeName\": \"vosa Vakaviti\"\r\n    },\r\n    \"fi\": {\r\n        \"name\": \"Finnish\",\r\n        \"nativeName\": \"suomi, suomen kieli\"\r\n    },\r\n    \"fr\": {\r\n        \"name\": \"French\",\r\n        \"nativeName\": \"français, langue française\"\r\n    },\r\n    \"ff\": {\r\n        \"name\": \"Fula; Fulah; Pulaar; Pular\",\r\n        \"nativeName\": \"Fulfulde, Pulaar, Pular\"\r\n    },\r\n    \"gl\": {\r\n        \"name\": \"Galician\",\r\n        \"nativeName\": \"Galego\"\r\n    },\r\n    \"ka\": {\r\n        \"name\": \"Georgian\",\r\n        \"nativeName\": \"ქართული\"\r\n    },\r\n    \"de\": {\r\n        \"name\": \"German\",\r\n        \"nativeName\": \"Deutsch\"\r\n    },\r\n    \"el\": {\r\n        \"name\": \"Greek, Modern\",\r\n        \"nativeName\": \"Ελληνικά\"\r\n    },\r\n    \"gn\": {\r\n        \"name\": \"Guaraní\",\r\n        \"nativeName\": \"Avañeẽ\"\r\n    },\r\n    \"gu\": {\r\n        \"name\": \"Gujarati\",\r\n        \"nativeName\": \"ગુજરાતી\"\r\n    },\r\n    \"ht\": {\r\n        \"name\": \"Haitian\",\r\n        \"nativeName\": \"Kreyòl ayisyen\"\r\n    },\r\n    \"ha\": {\r\n        \"name\": \"Hausa\",\r\n        \"nativeName\": \"Hausa, هَوُسَ\"\r\n    },\r\n    \"iw\": {\r\n        \"name\": \"Hebrew\",\r\n        \"nativeName\": \"עברית\"\r\n    },\r\n    \"hz\": {\r\n        \"name\": \"Herero\",\r\n        \"nativeName\": \"Otjiherero\"\r\n    },\r\n    \"hi\": {\r\n        \"name\": \"Hindi\",\r\n        \"nativeName\": \"हिन्दी, हिंदी\"\r\n    },\r\n    \"ho\": {\r\n        \"name\": \"Hiri Motu\",\r\n        \"nativeName\": \"Hiri Motu\"\r\n    },\r\n    \"hu\": {\r\n        \"name\": \"Hungarian\",\r\n        \"nativeName\": \"Magyar\"\r\n    },\r\n    \"ia\": {\r\n        \"name\": \"Interlingua\",\r\n        \"nativeName\": \"Interlingua\"\r\n    },\r\n    \"in\": {\r\n        \"name\": \"Indonesian\",\r\n        \"nativeName\": \"Bahasa Indonesia\"\r\n    },\r\n    \"ie\": {\r\n        \"name\": \"Interlingue\",\r\n        \"nativeName\": \"Originally called Occidental; then Interlingue after WWII\"\r\n    },\r\n    \"ga\": {\r\n        \"name\": \"Irish\",\r\n        \"nativeName\": \"Gaeilge\"\r\n    },\r\n    \"ig\": {\r\n        \"name\": \"Igbo\",\r\n        \"nativeName\": \"Asụsụ Igbo\"\r\n    },\r\n    \"ik\": {\r\n        \"name\": \"Inupiaq\",\r\n        \"nativeName\": \"Iñupiaq, Iñupiatun\"\r\n    },\r\n    \"io\": {\r\n        \"name\": \"Ido\",\r\n        \"nativeName\": \"Ido\"\r\n    },\r\n    \"is\": {\r\n        \"name\": \"Icelandic\",\r\n        \"nativeName\": \"Íslenska\"\r\n    },\r\n    \"it\": {\r\n        \"name\": \"Italian\",\r\n        \"nativeName\": \"Italiano\"\r\n    },\r\n    \"iu\": {\r\n        \"name\": \"Inuktitut\",\r\n        \"nativeName\": \"ᐃᓄᒃᑎᑐᑦ\"\r\n    },\r\n    \"ja\": {\r\n        \"name\": \"Japanese\",\r\n        \"nativeName\": \"日本語 (にほんご／にっぽんご)\"\r\n    },\r\n    \"jv\": {\r\n        \"name\": \"Javanese\",\r\n        \"nativeName\": \"basa Jawa\"\r\n    },\r\n    \"kl\": {\r\n        \"name\": \"Kalaallisut, Greenlandic\",\r\n        \"nativeName\": \"kalaallisut, kalaallit oqaasii\"\r\n    },\r\n    \"kn\": {\r\n        \"name\": \"Kannada\",\r\n        \"nativeName\": \"ಕನ್ನಡ\"\r\n    },\r\n    \"kr\": {\r\n        \"name\": \"Kanuri\",\r\n        \"nativeName\": \"Kanuri\"\r\n    },\r\n    \"ks\": {\r\n        \"name\": \"Kashmiri\",\r\n        \"nativeName\": \"कश्मीरी, كشميري‎\"\r\n    },\r\n    \"kk\": {\r\n        \"name\": \"Kazakh\",\r\n        \"nativeName\": \"Қазақ тілі\"\r\n    },\r\n    \"km\": {\r\n        \"name\": \"Khmer\",\r\n        \"nativeName\": \"ភាសាខ្មែរ\"\r\n    },\r\n    \"ki\": {\r\n        \"name\": \"Kikuyu, Gikuyu\",\r\n        \"nativeName\": \"Gĩkũyũ\"\r\n    },\r\n    \"rw\": {\r\n        \"name\": \"Kinyarwanda\",\r\n        \"nativeName\": \"Ikinyarwanda\"\r\n    },\r\n    \"ky\": {\r\n        \"name\": \"Kirghiz, Kyrgyz\",\r\n        \"nativeName\": \"кыргыз тили\"\r\n    },\r\n    \"kv\": {\r\n        \"name\": \"Komi\",\r\n        \"nativeName\": \"коми кыв\"\r\n    },\r\n    \"kg\": {\r\n        \"name\": \"Kongo\",\r\n        \"nativeName\": \"KiKongo\"\r\n    },\r\n    \"ko\": {\r\n        \"name\": \"Korean\",\r\n        \"nativeName\": \"한국어 (韓國語), 조선말 (朝鮮語)\"\r\n    },\r\n    \"ckb\": {\r\n        \"name\": \"Kurdish\",\r\n        \"nativeName\": \"Kurdî, كوردی‎\"\r\n    },\r\n    \"kj\": {\r\n        \"name\": \"Kwanyama, Kuanyama\",\r\n        \"nativeName\": \"Kuanyama\"\r\n    },\r\n    \"la\": {\r\n        \"name\": \"Latin\",\r\n        \"nativeName\": \"latine, lingua latina\"\r\n    },\r\n    \"lb\": {\r\n        \"name\": \"Luxembourgish\",\r\n        \"nativeName\": \"Lëtzebuergesch\"\r\n    },\r\n    \"lg\": {\r\n        \"name\": \"Luganda\",\r\n        \"nativeName\": \"Luganda\"\r\n    },\r\n    \"li\": {\r\n        \"name\": \"Limburgish\",\r\n        \"nativeName\": \"Limburgs\"\r\n    },\r\n    \"ln\": {\r\n        \"name\": \"Lingala\",\r\n        \"nativeName\": \"Lingála\"\r\n    },\r\n    \"lo\": {\r\n        \"name\": \"Lao\",\r\n        \"nativeName\": \"ພາສາລາວ\"\r\n    },\r\n    \"lt\": {\r\n        \"name\": \"Lithuanian\",\r\n        \"nativeName\": \"lietuvių kalba\"\r\n    },\r\n    \"lu\": {\r\n        \"name\": \"Luba-Katanga\",\r\n        \"nativeName\": \"\"\r\n    },\r\n    \"lv\": {\r\n        \"name\": \"Latvian\",\r\n        \"nativeName\": \"latviešu valoda\"\r\n    },\r\n    \"gv\": {\r\n        \"name\": \"Manx\",\r\n        \"nativeName\": \"Gaelg, Gailck\"\r\n    },\r\n    \"mk\": {\r\n        \"name\": \"Macedonian\",\r\n        \"nativeName\": \"македонски јазик\"\r\n    },\r\n    \"mg\": {\r\n        \"name\": \"Malagasy\",\r\n        \"nativeName\": \"Malagasy fiteny\"\r\n    },\r\n    \"ms\": {\r\n        \"name\": \"Malay\",\r\n        \"nativeName\": \"bahasa Melayu, بهاس ملايو‎\"\r\n    },\r\n    \"ml\": {\r\n        \"name\": \"Malayalam\",\r\n        \"nativeName\": \"മലയാളം\"\r\n    },\r\n    \"mt\": {\r\n        \"name\": \"Maltese\",\r\n        \"nativeName\": \"Malti\"\r\n    },\r\n    \"mi\": {\r\n        \"name\": \"Māori\",\r\n        \"nativeName\": \"te reo Māori\"\r\n    },\r\n    \"mr\": {\r\n        \"name\": \"Marathi\",\r\n        \"nativeName\": \"मराठी\"\r\n    },\r\n    \"mh\": {\r\n        \"name\": \"Marshallese\",\r\n        \"nativeName\": \"Kajin M̧ajeļ\"\r\n    },\r\n    \"mn\": {\r\n        \"name\": \"Mongolian\",\r\n        \"nativeName\": \"монгол\"\r\n    },\r\n    \"na\": {\r\n        \"name\": \"Nauru\",\r\n        \"nativeName\": \"Ekakairũ Naoero\"\r\n    },\r\n    \"nv\": {\r\n        \"name\": \"Navajo\",\r\n        \"nativeName\": \"Diné bizaad, Dinékʼehǰí\"\r\n    },\r\n    \"nb\": {\r\n        \"name\": \"Norwegian Bokmål\",\r\n        \"nativeName\": \"Norsk bokmål\"\r\n    },\r\n    \"nd\": {\r\n        \"name\": \"North Ndebele\",\r\n        \"nativeName\": \"isiNdebele\"\r\n    },\r\n    \"ne\": {\r\n        \"name\": \"Nepali\",\r\n        \"nativeName\": \"नेपाली\"\r\n    },\r\n    \"ng\": {\r\n        \"name\": \"Ndonga\",\r\n        \"nativeName\": \"Owambo\"\r\n    },\r\n    \"nn\": {\r\n        \"name\": \"Norwegian Nynorsk\",\r\n        \"nativeName\": \"Norsk nynorsk\"\r\n    },\r\n    \"no\": {\r\n        \"name\": \"Norwegian\",\r\n        \"nativeName\": \"Norsk\"\r\n    },\r\n    \"ii\": {\r\n        \"name\": \"Nuosu\",\r\n        \"nativeName\": \"ꆈꌠ꒿ Nuosuhxop\"\r\n    },\r\n    \"nr\": {\r\n        \"name\": \"South Ndebele\",\r\n        \"nativeName\": \"isiNdebele\"\r\n    },\r\n    \"oc\": {\r\n        \"name\": \"Occitan\",\r\n        \"nativeName\": \"Occitan\"\r\n    },\r\n    \"oj\": {\r\n        \"name\": \"Ojibwe\",\r\n        \"nativeName\": \"ᐊᓂᔑᓈᐯᒧᐎᓐ\"\r\n    },\r\n    \"cu\": {\r\n        \"name\": \"Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic\",\r\n        \"nativeName\": \"ѩзыкъ словѣньскъ\"\r\n    },\r\n    \"om\": {\r\n        \"name\": \"Oromo\",\r\n        \"nativeName\": \"Afaan Oromoo\"\r\n    },\r\n    \"or\": {\r\n        \"name\": \"Oriya\",\r\n        \"nativeName\": \"ଓଡ଼ିଆ\"\r\n    },\r\n    \"os\": {\r\n        \"name\": \"Ossetian\",\r\n        \"nativeName\": \"ирон æвзаг\"\r\n    },\r\n    \"pa\": {\r\n        \"name\": \"Panjabi\",\r\n        \"nativeName\": \"ਪੰਜਾਬੀ, پنجابی‎\"\r\n    },\r\n    \"pi\": {\r\n        \"name\": \"Pāli\",\r\n        \"nativeName\": \"पाऴि\"\r\n    },\r\n    \"fa\": {\r\n        \"name\": \"Persian\",\r\n        \"nativeName\": \"فارسی\"\r\n    },\r\n    \"pl\": {\r\n        \"name\": \"Polish\",\r\n        \"nativeName\": \"polski\"\r\n    },\r\n    \"ps\": {\r\n        \"name\": \"Pashto\",\r\n        \"nativeName\": \"پښتو\"\r\n    },\r\n    \"pt\": {\r\n        \"name\": \"Portuguese\",\r\n        \"nativeName\": \"Português\"\r\n    },\r\n    \"qu\": {\r\n        \"name\": \"Quechua\",\r\n        \"nativeName\": \"Runa Simi, Kichwa\"\r\n    },\r\n    \"rm\": {\r\n        \"name\": \"Romansh\",\r\n        \"nativeName\": \"rumantsch grischun\"\r\n    },\r\n    \"rn\": {\r\n        \"name\": \"Kirundi\",\r\n        \"nativeName\": \"kiRundi\"\r\n    },\r\n    \"ro\": {\r\n        \"name\": \"Romanian\",\r\n        \"nativeName\": \"română\"\r\n    },\r\n    \"ru\": {\r\n        \"name\": \"Russian\",\r\n        \"nativeName\": \"русский язык\"\r\n    },\r\n    \"sa\": {\r\n        \"name\": \"Sanskrit\",\r\n        \"nativeName\": \"संस्कृतम्\"\r\n    },\r\n    \"sc\": {\r\n        \"name\": \"Sardinian\",\r\n        \"nativeName\": \"sardu\"\r\n    },\r\n    \"sd\": {\r\n        \"name\": \"Sindhi\",\r\n        \"nativeName\": \"सिन्धी, سنڌي، سندھی‎\"\r\n    },\r\n    \"se\": {\r\n        \"name\": \"Northern Sami\",\r\n        \"nativeName\": \"Davvisámegiella\"\r\n    },\r\n    \"sm\": {\r\n        \"name\": \"Samoan\",\r\n        \"nativeName\": \"gagana faa Samoa\"\r\n    },\r\n    \"sg\": {\r\n        \"name\": \"Sango\",\r\n        \"nativeName\": \"yângâ tî sängö\"\r\n    },\r\n    \"sr\": {\r\n        \"name\": \"Serbian\",\r\n        \"nativeName\": \"српски језик\"\r\n    },\r\n    \"gd\": {\r\n        \"name\": \"Scottish Gaelic\",\r\n        \"nativeName\": \"Gàidhlig\"\r\n    },\r\n    \"sn\": {\r\n        \"name\": \"Shona\",\r\n        \"nativeName\": \"chiShona\"\r\n    },\r\n    \"si\": {\r\n        \"name\": \"Sinhala, Sinhalese\",\r\n        \"nativeName\": \"සිංහල\"\r\n    },\r\n    \"sk\": {\r\n        \"name\": \"Slovak\",\r\n        \"nativeName\": \"slovenčina\"\r\n    },\r\n    \"sl\": {\r\n        \"name\": \"Slovene\",\r\n        \"nativeName\": \"slovenščina\"\r\n    },\r\n    \"so\": {\r\n        \"name\": \"Somali\",\r\n        \"nativeName\": \"Soomaaliga, af Soomaali\"\r\n    },\r\n    \"st\": {\r\n        \"name\": \"Southern Sotho\",\r\n        \"nativeName\": \"Sesotho\"\r\n    },\r\n    \"es\": {\r\n        \"name\": \"Spanish\",\r\n        \"nativeName\": \"español, castellano\"\r\n    },\r\n    \"su\": {\r\n        \"name\": \"Sundanese\",\r\n        \"nativeName\": \"Basa Sunda\"\r\n    },\r\n    \"sw\": {\r\n        \"name\": \"Swahili\",\r\n        \"nativeName\": \"Kiswahili\"\r\n    },\r\n    \"ss\": {\r\n        \"name\": \"Swati\",\r\n        \"nativeName\": \"SiSwati\"\r\n    },\r\n    \"sv\": {\r\n        \"name\": \"Swedish\",\r\n        \"nativeName\": \"svenska\"\r\n    },\r\n    \"ta\": {\r\n        \"name\": \"Tamil\",\r\n        \"nativeName\": \"தமிழ்\"\r\n    },\r\n    \"te\": {\r\n        \"name\": \"Telugu\",\r\n        \"nativeName\": \"తెలుగు\"\r\n    },\r\n    \"tg\": {\r\n        \"name\": \"Tajik\",\r\n        \"nativeName\": \"тоҷикӣ, toğikī, تاجیکی‎\"\r\n    },\r\n    \"th\": {\r\n        \"name\": \"Thai\",\r\n        \"nativeName\": \"ไทย\"\r\n    },\r\n    \"ti\": {\r\n        \"name\": \"Tigrinya\",\r\n        \"nativeName\": \"ትግርኛ\"\r\n    },\r\n    \"bo\": {\r\n        \"name\": \"Tibetan Standard\",\r\n        \"nativeName\": \"བོད་ཡིག\"\r\n    },\r\n    \"tk\": {\r\n        \"name\": \"Turkmen\",\r\n        \"nativeName\": \"Türkmen, Түркмен\"\r\n    },\r\n    \"tl\": {\r\n        \"name\": \"Tagalog\",\r\n        \"nativeName\": \"Wikang Tagalog, ᜏᜒᜃᜅ᜔ ᜆᜄᜎᜓᜄ᜔\"\r\n    },\r\n    \"tn\": {\r\n        \"name\": \"Tswana\",\r\n        \"nativeName\": \"Setswana\"\r\n    },\r\n    \"to\": {\r\n        \"name\": \"Tonga (Tonga Islands)\",\r\n        \"nativeName\": \"faka Tonga\"\r\n    },\r\n    \"tr\": {\r\n        \"name\": \"Turkish\",\r\n        \"nativeName\": \"Türkçe\"\r\n    },\r\n    \"ts\": {\r\n        \"name\": \"Tsonga\",\r\n        \"nativeName\": \"Xitsonga\"\r\n    },\r\n    \"tt\": {\r\n        \"name\": \"Tatar\",\r\n        \"nativeName\": \"татарча, tatarça, تاتارچا‎\"\r\n    },\r\n    \"tw\": {\r\n        \"name\": \"Twi\",\r\n        \"nativeName\": \"Twi\"\r\n    },\r\n    \"ty\": {\r\n        \"name\": \"Tahitian\",\r\n        \"nativeName\": \"Reo Tahiti\"\r\n    },\r\n    \"ug\": {\r\n        \"name\": \"Uighur, Uyghur\",\r\n        \"nativeName\": \"Uyƣurqə, ئۇيغۇرچە‎\"\r\n    },\r\n    \"uk\": {\r\n        \"name\": \"Ukrainian\",\r\n        \"nativeName\": \"українська\"\r\n    },\r\n    \"ur\": {\r\n        \"name\": \"Urdu\",\r\n        \"nativeName\": \"اردو\"\r\n    },\r\n    \"uz\": {\r\n        \"name\": \"Uzbek\",\r\n        \"nativeName\": \"zbek, Ўзбек, أۇزبېك‎\"\r\n    },\r\n    \"ve\": {\r\n        \"name\": \"Venda\",\r\n        \"nativeName\": \"Tshivenḓa\"\r\n    },\r\n    \"vi\": {\r\n        \"name\": \"Vietnamese\",\r\n        \"nativeName\": \"Tiếng Việt\"\r\n    },\r\n    \"vo\": {\r\n        \"name\": \"Volapük\",\r\n        \"nativeName\": \"Volapük\"\r\n    },\r\n    \"wa\": {\r\n        \"name\": \"Walloon\",\r\n        \"nativeName\": \"Walon\"\r\n    },\r\n    \"cy\": {\r\n        \"name\": \"Welsh\",\r\n        \"nativeName\": \"Cymraeg\"\r\n    },\r\n    \"wo\": {\r\n        \"name\": \"Wolof\",\r\n        \"nativeName\": \"Wollof\"\r\n    },\r\n    \"fy\": {\r\n        \"name\": \"Western Frisian\",\r\n        \"nativeName\": \"Frysk\"\r\n    },\r\n    \"xh\": {\r\n        \"name\": \"Xhosa\",\r\n        \"nativeName\": \"isiXhosa\"\r\n    },\r\n    \"yi\": {\r\n        \"name\": \"Yiddish\",\r\n        \"nativeName\": \"ייִדיש\"\r\n    },\r\n    \"yo\": {\r\n        \"name\": \"Yoruba\",\r\n        \"nativeName\": \"Yorùbá\"\r\n    },\r\n    \"za\": {\r\n        \"name\": \"Zhuang, Chuang\",\r\n        \"nativeName\": \"Saɯ cueŋƅ, Saw cuengh\"\r\n    }\r\n}","import \"./Chart.scss\"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport moment from 'moment';\r\nimport { findFullLangName } from \"../utils/LangLibrary\";\r\n\r\nexport const Chart = ({ langData, totalOccurrence, dataSet, setDataSet }) => {\r\n\r\n    const INITIALLY_SELECTED_QTY = 3;\r\n    const DEFAULT_SHOW_LANG_QTY = 20;\r\n\r\n    const [showLangQty, setshowLangQty] = useState(DEFAULT_SHOW_LANG_QTY);\r\n    const [selected, setSelected] = useState([]);\r\n    const [selectedData, setSelectedData] = useState([]);\r\n\r\n    /*     set most common languages to be selected by default */\r\n\r\n    useEffect(() => {\r\n        const initiallySelected = [];\r\n        for (let i = 0; i < INITIALLY_SELECTED_QTY; i++) {\r\n            if (totalOccurrence[i])\r\n                initiallySelected.push(totalOccurrence[i][0]);\r\n        }\r\n        setSelected(initiallySelected)\r\n    }, []) // eslint-disable-line\r\n\r\n    /*     transform data for chart needs */\r\n    useEffect(() => {\r\n        let newData = [];\r\n        for (let i = 0; i < langData.length; i++) {\r\n            let tempArr = []\r\n            tempArr.push({ timestamp: Date.parse(langData[i].timestamp) })\r\n            for (let j = 0; j < langData[i].records.length; j++) {\r\n                if (selected.includes(langData[i].records[j].lang))\r\n                    tempArr.push({ [langData[i].records[j].lang]: langData[i].records[j].occurrence })\r\n            }\r\n            const obj = tempArr.reduce((obj, item) => ({ ...obj, ...item }), {});\r\n            newData.push(obj);\r\n        }\r\n        setSelectedData(newData.reverse());\r\n    }, [langData, selected])\r\n\r\n    const findColor = (str) => {\r\n        const lang = str + \"randa$a1\"\r\n        let hash = 0;\r\n        for (let i = 0; i < lang.length; i++) {\r\n            hash = lang.charCodeAt(i) + ((hash << 5) - hash);\r\n        }\r\n        let colour = '#';\r\n        for (let i = 0; i < 3; i++) {\r\n            let value = (hash >> (i * 8)) & 0xFF;\r\n            colour += ('00' + value.toString(16)).substr(-2);\r\n        }\r\n        return colour;\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        selected.includes(event.target.name) ?\r\n            setSelected(selected.filter(item => item !== event.target.name)) :\r\n            setSelected([...selected, event.target.name])\r\n    }\r\n\r\n    const handleChangeSelectAll = (event) => {\r\n        const allSelected = [];\r\n        if (event.target.checked) {\r\n            for (let i = 0; i < totalOccurrence.length; i++) {\r\n                if (totalOccurrence[i][1] >= showLangQty)\r\n                    allSelected.push(totalOccurrence[i][0]);\r\n            }\r\n        }\r\n        setSelected(allSelected)\r\n    }\r\n\r\n    const onClickShowAll = () => {\r\n        setshowLangQty(showLangQty === Number.MAX_SAFE_INTEGER ?\r\n            DEFAULT_SHOW_LANG_QTY : Number.MAX_SAFE_INTEGER);\r\n\r\n        if (document.getElementById(\"legend\").checked) {\r\n            const allSelected = [];\r\n            for (let i = 0; i < totalOccurrence.length; i++) {\r\n                allSelected.push(totalOccurrence[i][0]);\r\n            }\r\n            setSelected(allSelected)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"ChartComponent\">\r\n            {totalOccurrence.length > 0 ? (\r\n                <div className=\"big-wrapper\">\r\n                    <div className=\"legend-wrapper\">\r\n                        <div className=\"list-wrapper\">\r\n                            <div className={showLangQty === DEFAULT_SHOW_LANG_QTY ? \"lang-list\" : \"lang-list max-height\"}>\r\n                                <div className=\"list-row list-header grayed\">\r\n                                    <input type=\"checkbox\" id=\"legend\" onChange={handleChangeSelectAll} />\r\n                                    <label htmlFor=\"legend\" className=\"label-lang\">LANG:</label>\r\n                                    <div className=\"tooltip\">\r\n                                        <label htmlFor=\"legend\" className=\"label-value\">OCC:</label>\r\n                                        <span className=\"tooltip-text\">Total number of occurrences in selected time period. Data gathered from 1% of all tweets</span>\r\n                                    </div>\r\n                                </div>\r\n                                {totalOccurrence.map((lang, index) => {\r\n                                    if (index < showLangQty) {\r\n                                        return (\r\n                                            <div key={lang} className={index % 2 === 0 ? \"list-row\" : \"list-row grayed\"} >\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    id={lang[0]}\r\n                                                    value={lang[0]}\r\n                                                    name={lang[0]}\r\n                                                    key={lang + selected}\r\n                                                    onChange={handleChange}\r\n                                                    defaultChecked={selected.includes(lang[0])} />\r\n                                                <label htmlFor={lang[0]} className=\"label-lang\">{findFullLangName(lang[0])}</label>\r\n                                                <label htmlFor={lang[0]} className=\"label-value\">{lang[1].toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</label>\r\n                                            </div>\r\n                                        )\r\n                                    } else {\r\n                                        return null;\r\n                                    }\r\n                                }\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"button-show\" onClick={onClickShowAll}>\r\n                            {showLangQty === DEFAULT_SHOW_LANG_QTY ? \"SHOW LESS POPULAR\" : \"HIDE LESS POPULAR\"}\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"chart-wrapper\">\r\n                        <div className=\"chart\">\r\n                            <ResponsiveContainer width=\"99%\" height={500} >\r\n                                < LineChart\r\n                                    data={selectedData}\r\n                                >\r\n                                    <defs>\r\n                                        <filter id=\"shadow\" height=\"200%\">\r\n                                            <feDropShadow dx=\"0\" dy=\"10\" stdDeviation=\"8\" />\r\n                                        </filter>\r\n                                        <filter id=\"glow\">\r\n                                            <feGaussianBlur stdDeviation=\"2.5\" result=\"coloredBlur\" />\r\n                                            <feMerge>\r\n                                                <feMergeNode in=\"coloredBlur\" />\r\n                                                <feMergeNode in=\"SourceGraphic\" />\r\n                                            </feMerge>\r\n                                        </filter>\r\n                                    </defs>\r\n                                    <XAxis\r\n                                        stroke='white'\r\n                                        dataKey=\"timestamp\"\r\n                                        type=\"number\"\r\n                                        tickCount={selectedData.length}\r\n                                        domain={['dataMin', 'dataMax']}\r\n                                        tickMargin=\"5\"\r\n                                        tickFormatter={time =>\r\n                                            moment(time).local().format(\r\n                                                [\"7D\", \"30D\"].includes(dataSet) ? '\"MMM Do YY\"' :\r\n                                                    [\"1D\", \"6H\"].includes(dataSet) ? 'h:mm a' : 'h:mm:ss')} />\r\n                                    <YAxis\r\n                                        stroke='white'\r\n                                    />\r\n                                    <Tooltip\r\n                                        labelFormatter={time => moment(time).local().format('MMMM Do YYYY, h:mm:ss a')}\r\n                                        formatter={(value) => value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                    />\r\n                                    {selected.map((lang) =>\r\n                                        <Line\r\n                                            type=\"monotone\"\r\n                                            dataKey={lang} key={lang}\r\n                                            stroke={findColor(lang)}\r\n                                            name={findFullLangName(lang)}\r\n                                            dot={false}\r\n                                            filter=\"url(#shadow) url(#glow)\"\r\n                                        />\r\n                                    )}\r\n                                </LineChart >\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className=\"button-bar\">\r\n                            <button className={dataSet === \"1H\" ? \"button-selected\" : \"\"} onClick={() => setDataSet(\"1H\")}>\r\n                                1H\r\n                            </button>\r\n                            <button className={dataSet === \"6H\" ? \"button-selected\" : \"\"} onClick={() => setDataSet(\"6H\")}>\r\n                                6H\r\n                            </button>\r\n                            <button className={dataSet === \"1D\" ? \"button-selected\" : \"\"} onClick={() => setDataSet(\"1D\")}>\r\n                                1D\r\n                            </button>\r\n                            <button className={dataSet === \"7D\" ? \"button-selected\" : \"\"} onClick={() => setDataSet(\"7D\")}>\r\n                                7D\r\n                            </button>\r\n                            <button className={dataSet === \"30D\" ? \"button-selected\" : \"\"} onClick={() => setDataSet(\"30D\")}>\r\n                                30D\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <p>\r\n                    loading\r\n                </p>\r\n            )\r\n            }\r\n        </section >\r\n    )\r\n}","import \"./Header.scss\"\r\nexport const Header = () => {\r\n\r\n    return (\r\n        <section className=\"Header\">\r\n            <div className=\"title\">\r\n                TWITTER MONITOR\r\n            </div>\r\n            <div className=\"description\">\r\n                Monitoring tweets, to show live data on languages popularity.\r\n            </div>\r\n        </section>\r\n    )\r\n}","import './NetworkError.scss'\r\nimport React from \"react\";\r\n\r\nexport const NetworkError = () => (\r\n  <div className='NetworkError'>\r\n    <div className='message'>\r\n      <h1>Something went wrong</h1>\r\n      <h2>Server not responding</h2>\r\n    </div>\r\n  </div>\r\n);","import \"./ChartPage.scss\"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Chart } from '../components/Chart';\r\nimport { Header } from \"../components/Header\";\r\nimport { NetworkError } from \"./NetworkError\";\r\n\r\nexport const ChartPage = () => {\r\n    const [langData, setLangData] = useState([]);\r\n    const [totalOccurrence, setTotalOccurrence] = useState([]);\r\n    const [dataSet, setDataSet] = useState(\"1H\")\r\n    const [code, setCode] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchRecords = async () => {\r\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/api/v1/records/recent-${dataSet}`);\r\n            const data = await response.json();\r\n            setLangData(data);\r\n        };\r\n        fetchRecords().catch(error => {\r\n            setCode(error.code ? error.code : 'NetworkError');\r\n        });\r\n    }, [dataSet])\r\n\r\n    useEffect(() => {\r\n        const map = new Map();\r\n        for (let i = 0; i < langData.length; i++) {\r\n            for (let j = 0; j < langData[i].records.length; j++) {\r\n                let record = langData[i].records[j];\r\n                let currentValue = map.get(record.lang)\r\n                map.set(record.lang, currentValue > 0 ? currentValue + record.occurrence : record.occurrence);\r\n            }\r\n        }\r\n        /* delete undefined tweets from presented data */\r\n        map.delete(\"und\");\r\n        const arr = Array.from(map).sort((a, b) => b[1] - a[1]);\r\n        setTotalOccurrence(arr)\r\n    }, [langData]);\r\n\r\n\r\n    return (\r\n        <section className=\"ChartPage\">\r\n            {code !== 'NetworkError' ? (\r\n                <div>\r\n                    <Header />\r\n                    {langData.length > 0 && totalOccurrence.length > 0 ? (\r\n                        <Chart langData={langData} totalOccurrence={totalOccurrence} dataSet={dataSet} setDataSet={setDataSet} />\r\n                    ) : (\r\n                        <p>loading</p>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <NetworkError />\r\n            )}\r\n        </section>\r\n    )\r\n}","import './App.scss';\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { ChartPage } from './pages/ChartPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className=\"page-content\">\n          <Switch>\n          <Route path=\"/\" component={ChartPage} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}